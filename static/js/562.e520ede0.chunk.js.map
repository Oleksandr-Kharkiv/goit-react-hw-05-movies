{"version":3,"file":"static/js/562.e520ede0.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CACIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CACe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACTC,EAAOC,UACT,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GACzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CACA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CACAjB,OAAMkB,EACR,GACF,CACF,C,uJC7BMC,EAAQ,+BACRC,EAAG,mCAEIC,EAAiB,6BAAG,+GAENC,MAAM,GAAD,OAAIH,EAAJ,uCAA2CC,IAF1C,cAEvBG,EAFuB,gBAGRA,EAASC,OAHD,cAGvBC,EAHuB,yBAItBA,GAJsB,kCAM7BC,MAAM,KAAMC,SANiB,0DAAH,qDAUjBC,EAAkB,6BAAG,WAAOC,GAAP,kGAEPP,MAAM,GAAD,OAAIH,EAAJ,iCAAqCC,EAArC,kBAAkDS,EAAlD,+CAFE,cAExBN,EAFwB,gBAGTA,EAASC,OAHA,cAGxBC,EAHwB,yBAIvBA,GAJuB,kCAM9BC,MAAM,KAAMC,SANkB,0DAAH,sDAUlBG,EAAa,6BAAG,WAAOC,GAAP,kGAEFT,MAAM,GAAD,OAAIH,EAAJ,kBAAsBY,EAAtB,oBAAoCX,EAApC,oBAFH,cAEnBG,EAFmB,gBAGLA,EAASC,OAHJ,cAGnBQ,EAHmB,yBAIlBA,GAJkB,kCAMzBN,MAAM,KAAMC,SANa,0DAAH,sDAUbM,EAAiB,6BAAG,WAAOF,GAAP,kGAENT,MAAM,GAAD,OAAIH,EAAJ,kBAAsBY,EAAtB,4BAA4CX,EAA5C,oBAFC,cAEvBG,EAFuB,gBAGTA,EAASC,OAHA,cAGvBQ,EAHuB,yBAItBA,GAJsB,kCAM7BN,MAAM,KAAMC,SANiB,0DAAH,sDAUjBO,EAAoB,6BAAG,WAAOH,GAAP,kGAETT,MAAM,GAAD,OAAIH,EAAJ,kBAAsBY,EAAtB,4BAA4CX,EAA5C,2BAFI,cAE1BG,EAF0B,gBAGZA,EAASC,OAHG,cAG1BQ,EAH0B,yBAIzBA,GAJyB,kCAMhCN,MAAM,KAAMC,SANoB,0DAAH,qD,8ECvBjC,UAfiB,WACf,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRhB,EAAAA,EAAAA,MAAoBZ,MAAK,SAAAgB,GAAM,OAAIW,EAAUX,EAAOa,QAArB,GAChC,GAAE,KAGD,iCACE,2CACCb,IAAU,SAAC,IAAD,CAAYA,OAAQA,MAGpC,C,sDCjBD,OAAgB,KAAO,0B,0BCkBvB,EAhBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdc,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGjB,GACCA,EAAOkB,KAAI,SAAAX,GACT,OACE,eAAIS,UAAWC,EAAAA,KAAf,UACE,SAAC,KAAD,CAAME,GAAE,kBAAaZ,EAAMD,IAAMc,MAAO,CAAEC,KAAMP,GAAhD,SAA6DP,EAAMe,SADvCf,EAAMD,GAIvC,KAGR,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","API/serviceApi.js","Pages/HomePage.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = `https://api.themoviedb.org/3`\nconst KEY = `44b5968d02afc5d51cc06c820ba3f06d`\n\nexport const getTrendMoviesApi = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const getSearchMoviesApi = async (query) => {\n  try {\n    const response = await fetch(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&include_adult=false&language=en-US&page=1`);\n    const movies = await response.json();\n    return movies\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const getMovieIdApi = async (id) => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${id}?api_key=${KEY}&language=en-US`);\n    const movie = await response.json();\n    return movie\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const getMovieIdCastApi = async (id) => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${id}/credits?api_key=${KEY}&language=en-US`);\n    const movie = await response.json();\n    return movie\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\nexport const getMovieIdReviewsApi = async (id) => {\n  try {\n    const response = await fetch(`${BASE_URL}/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n    const movie = await response.json();\n    return movie\n  } catch (error) {\n    alert(error.message);\n  }\n};\n\n\n","// import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { getTrendMoviesApi } from '../API/serviceApi';\nimport MoviesList from '../components/MoviesList/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendMoviesApi().then(movies => setMovies(movies.results));\n  }, []);\n\n  return (\n    <>\n      <h2>Trending today</h2>\n      {movies && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\"};","import css from './MoviesList.module.css';\nimport { Link, useLocation} from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  \n  return (\n    <ul className={css.list}>\n      {movies &&\n        movies.map(movie => {\n          return (\n            <li className={css.item} key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\nexport default MoviesList;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","getTrendMoviesApi","fetch","response","json","movies","alert","message","getSearchMoviesApi","query","getMovieIdApi","id","movie","getMovieIdCastApi","getMovieIdReviewsApi","useState","setMovies","useEffect","results","location","useLocation","className","css","map","to","state","from","title"],"sourceRoot":""}